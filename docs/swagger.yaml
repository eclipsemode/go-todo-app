basePath: /api/v1
definitions:
  models.Todo:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  responseApi.Response:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  todos.createTodoReq:
    properties:
      description:
        maxLength: 100
        type: string
      title:
        maxLength: 20
        type: string
    required:
    - title
    type: object
  todos.createTodoRes:
    properties:
      description:
        type: string
      error:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  todos.getAllTodosRes:
    properties:
      error:
        type: string
      status:
        type: string
      todos:
        items:
          $ref: '#/definitions/models.Todo'
        type: array
    type: object
  todos.getTodoRes:
    properties:
      error:
        type: string
      status:
        type: string
      todo:
        $ref: '#/definitions/models.Todo'
    type: object
  todos.updateTodoReq:
    properties:
      description:
        maxLength: 100
        type: string
      title:
        maxLength: 20
        type: string
    required:
    - title
    type: object
  todos.updateTodoRes:
    properties:
      description:
        type: string
      error:
        type: string
      id:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8081
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Simple Rest Api for to do list
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: List to do API
  version: "1.0"
paths:
  /todos:
    get:
      consumes:
      - application/json
      description: get all todos
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/todos.getAllTodosRes'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.Response'
        "500":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.Response'
      summary: Show a to-do
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: create to-do
      parameters:
      - description: Create to-do req
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/todos.createTodoReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/todos.createTodoRes'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.Response'
        "500":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.Response'
      summary: Create to-do post method
      tags:
      - todos
  /todos/{id}:
    delete:
      consumes:
      - application/json
      description: delete to-do by id
      parameters:
      - description: Todos id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Success
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.Response'
        "500":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.Response'
      summary: Delete To-do by id
      tags:
      - todos
    get:
      consumes:
      - application/json
      description: get to-do by id
      parameters:
      - description: Todos id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/todos.getTodoRes'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.Response'
        "500":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.Response'
      summary: Get To-do by id
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: update to-do by id
      parameters:
      - description: Update to-do req
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/todos.updateTodoReq'
      - description: Todos id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/todos.updateTodoRes'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.Response'
        "500":
          description: Error
          schema:
            $ref: '#/definitions/responseApi.Response'
      summary: Update To-do by id
      tags:
      - todos
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
